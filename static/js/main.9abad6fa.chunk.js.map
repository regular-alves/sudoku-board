{"version":3,"sources":["components/column/index.js","components/row/index.js","components/board/index.js","components/toggle/index.js","App.js","index.js"],"names":["Column","props","sectionLength","Math","sqrt","boardLength","lastOfSection","column","className","this","floor","error","id","row","type","value","onChange","e","changeHandler","target","substr","possible","length","map","i","htmlFor","React","Component","Row","columns","changeFieldHandler","x","col","key","Board","defaultObject","Array","from","keys","useState","JSON","parse","stringify","fill","fields","setFields","duplicated","val","self","indexOf","unique","setField","y","v","newFields","slice","undefined","console","log","field","parseInt","checkBoard","getRow","filter","item","getColumn","resultSet","push","getSection","section","startY","startX","boardFields","includes","values","uniqueValues","Toogle","text","App","element","document","body","checked","classList","add","remove","ReactGA","initialize","set","page","pageview","exception","description","fatal","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9abad6fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class Column extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sectionLength = Math.sqrt(this.props.boardLength);\r\n        this.lastOfSection = (this.props.column + 1) % this.sectionLength===0;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className={\r\n                    `column column-${this.props.column} ` + \r\n                    `section-${Math.floor((this.props.column + this.sectionLength) / this.sectionLength)} ` +\r\n                    `${this.lastOfSection ? 'section-last' : ''} ` +\r\n                    `${this.props.error ? 'error' : ''}` \r\n                }\r\n            >\r\n                <input \r\n                    id={`input-${this.props.row}-${this.props.column}`}\r\n                    type=\"number\" \r\n                    className=\"field\"\r\n                    value={this.props.value}\r\n                    onChange={(e) => {\r\n                        this.props.changeHandler(this.props.column, e.target.value.substr(-1));\r\n                    }}\r\n                />\r\n                <div className=\"possibles\">{\r\n                    this.props?.possible.length>0 \r\n                    && this.props.possible.map(i => (\r\n                        <label \r\n                            htmlFor={`input-${this.props.row}-${this.props.column}`} \r\n                            className=\"possible\"\r\n                        >{i}</label>\r\n                    ))\r\n                }</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import './style.css';\r\nimport Column from '../column';\r\n\r\nconst Row = ({ columns, row, changeHandler, boardLength }) => {\r\n    const sectionLength = Math.sqrt(boardLength);\r\n    const lastOfSection = (row + 1) % sectionLength===0;\r\n\r\n    const changeFieldHandler = (x, value) => {\r\n        changeHandler(row, x, value);\r\n    }\r\n\r\n    return (\r\n        <div className={`row row-${row} ${lastOfSection ? 'row-section-last' : ''}`}>\r\n            {columns.map((col, key) => (\r\n                <Column \r\n                    {...col}\r\n                    column={key} \r\n                    row={row}\r\n                    boardLength={boardLength}\r\n                    changeHandler={changeFieldHandler}\r\n                    possible={col?.possible || []}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Row from '../row';\r\n\r\nconst Board = ({ length }) => {\r\n    const defaultObject = {\r\n        value: null, \r\n        error: false,\r\n        possible: Array.from(Array(length).keys())\r\n    };\r\n\r\n    const [fields, setFields] = useState(\r\n        JSON.parse(JSON.stringify(Array(9).fill(Array(9).fill(defaultObject))))\r\n    );\r\n        \r\n    const duplicated = (val, i, self) => self.indexOf(val) !== i;\r\n    const unique = (val, i, self) => self.indexOf(val) === i;\r\n\r\n    const setField = (y,x,v) => {\r\n        let newFields = fields.slice();\r\n        \r\n        if(newFields[y][x]!==undefined) {\r\n            console.log({ x, y, field: newFields[y][x] });\r\n\r\n            newFields[y][x].value = parseInt(v);\r\n            \r\n            newFields = checkBoard(newFields);\r\n        }\r\n\r\n        setFields(newFields);\r\n    }\r\n\r\n    const getRow = (y) => {\r\n        let resultSet = fields[y] || [];\r\n\r\n        return resultSet.filter(item => !!item.value).map(field => parseInt(field.value));\r\n    }\r\n    \r\n    const getColumn = (x) => {\r\n        let resultSet = [];\r\n        \r\n        fields.slice().map((row) => resultSet.push(row[x] || null));\r\n        \r\n        return resultSet.filter(item => !!item.value).map(field => parseInt(field.value));\r\n    }\r\n    \r\n    const getSection = (y,x) => {\r\n        const resultSet = [];\r\n        const section = Math.sqrt(length);\r\n\r\n        const startY = Math.floor(y / section) * section;\r\n        const startX = Math.floor(x / section) * section;\r\n\r\n        fields\r\n            .slice(startY, startY + section)\r\n            .map(row => resultSet.push(...row.slice(startX, startX + section)));\r\n\r\n        return resultSet.filter(item => !!item.value).map(field => parseInt(field.value));\r\n    }\r\n    \r\n    const checkBoard = (boardFields) => {\r\n        return boardFields\r\n            .map((row, y) => \r\n                row.map((col, x) => {\r\n                    if(col.value) {\r\n                        col.error = !!(\r\n                            getRow(y).filter(duplicated).includes(col.value) ||\r\n                            getColumn(x).filter(duplicated).includes(col.value) ||\r\n                            getSection(y, x).filter(duplicated).includes(col.value)\r\n                        );\r\n                    }\r\n                    \r\n                    const values = [];\r\n\r\n                    values.push(...getRow(y));\r\n                    values.push(...getColumn(x));\r\n                    values.push(...getSection(y, x));\r\n                    \r\n                    const uniqueValues = values.filter(unique);\r\n                    col.possible = [...Array(length).keys()]\r\n                        .map(x => x + 1)\r\n                        .filter(x => !uniqueValues.includes(x));\r\n\r\n                    return col;\r\n                })\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className=\"sudoku-board\">\r\n            {fields.map((columns, key) => (\r\n                <Row \r\n                    columns={columns} \r\n                    row={key} \r\n                    boardLength={length}\r\n                    changeHandler={setField}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import './style.css';\r\n\r\nconst Toogle = ({onChange, text}) => {\r\n    return (\r\n        <div className=\"toogle-button\">\r\n            <span>{text}</span>\r\n            <label>\r\n                <input type=\"checkbox\" value=\"1\" onChange={onChange} />\r\n                <span>&nbsp;</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toogle;","import Board from './components/board';\nimport Toogle from './components/toggle';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"settings\">\n      <Toogle \n        text={'Dark theme'} \n        onChange={(e) => {\n          const element = document.body;\n\n          if(e.target.checked) {\n            element.classList.add('dark');\n          }else{\n            element.classList.remove('dark');\n          }\n        }}\n        />\n      <Toogle \n        text={'Show tips'} \n        onChange={(e) => {\n          const element = document.body;\n\n          if(e.target.checked) {\n            element.classList.add('show-tips');\n          }else{\n            element.classList.remove('show-tips');\n          }\n        }}\n      />\n      </div><Board length={9} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './global.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('UA-216506531-1');\r\n\r\nReactGA.set({ page: '/' });\r\nReactGA.pageview('/');\r\n\r\nReactGA.exception({\r\n  description: 'An error ocurred',\r\n  fatal: true\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}