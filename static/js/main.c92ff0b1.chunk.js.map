{"version":3,"sources":["components/column/index.js","components/row/index.js","components/board/index.js","components/toggle/index.js","App.js","reportWebVitals.js","index.js"],"names":["Column","props","sectionLength","Math","sqrt","boardLength","lastOfSection","column","className","this","floor","hasError","id","row","type","value","ref","inputRef","onChange","e","changeHandler","target","possible","length","map","i","React","Component","Row","columns","activeRow","activeColumn","columnErrors","changeFieldHandler","x","col","key","isActive","error","Board","defaultObject","useState","active","setActive","fields","setFields","duplicated","val","self","indexOf","unique","setField","y","v","newFields","slice","undefined","parseInt","checkBoard","getSection","nextY","nextX","getRow","field","filter","item","getColumn","resultSet","push","section","startY","startX","boardFields","includes","values","uniqueValues","Array","keys","Toogle","text","App","element","document","body","checked","classList","add","remove","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c92ff0b1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class Column extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sectionLength = Math.sqrt(this.props.boardLength);\r\n        this.lastOfSection = (this.props.column + 1) % this.sectionLength===0;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                className={\r\n                    `column column-${this.props.column} ` + \r\n                    `section-${Math.floor((this.props.column + this.sectionLength) / this.sectionLength)} ` +\r\n                    `${this.lastOfSection ? 'section-last' : ''} ` +\r\n                    `${this.props?.hasError ? 'error' : ''}` \r\n                }\r\n            >\r\n                <input \r\n                    id={`input-${this.props.row}-${this.props.column}`}\r\n                    type=\"text\" \r\n                    value={this.props.value}\r\n                    ref={this.inputRef}\r\n                    onChange={(e) => {\r\n                        this.props.changeHandler(this.props.column, e.target.value);\r\n                    }}\r\n                />\r\n                <div className=\"possibles\">{\r\n                    this.props?.possible.length>0 \r\n                    && this.props.possible.map(i => (\r\n                        <div className=\"possible\">{`${i}`}</div>\r\n                    ))\r\n                }</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import './style.css';\r\nimport Column from '../column';\r\n\r\nconst Row = ({columns, row, changeHandler, boardLength, activeRow, activeColumn, columnErrors}) => {\r\n    const sectionLength = Math.sqrt(boardLength);\r\n    const lastOfSection = (row + 1) % sectionLength===0;\r\n\r\n    const changeFieldHandler = (x, value) => {\r\n        changeHandler(row, x, value);\r\n    }\r\n\r\n    return (\r\n        <div className={`row row-${row} ${lastOfSection ? 'row-section-last' : ''}`}>\r\n            {columns.map((col, key) => (\r\n                <Column \r\n                    value={col?.value || ''} \r\n                    column={key} \r\n                    row={row}\r\n                    boardLength={boardLength}\r\n                    changeHandler={changeFieldHandler} \r\n                    isActive={activeRow===row && activeColumn===key}\r\n                    hasError={col?.error || false}\r\n                    possible={col?.possible || []}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Row from '../row';\r\n\r\nconst Board = ({length}) => {\r\n    const defaultObject = {\r\n        value: null, \r\n        error: true,\r\n        possible: []\r\n    };\r\n\r\n    /* const [fields, setFields] = useState(Array(9).fill(Array(9).fill(defaultObject))); */\r\n    const section = Math.sqrt(length);\r\n    const [active, setActive] = useState([0,0]);\r\n    const [fields, setFields] = useState([\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n    ]);\r\n\r\n    const duplicated = (val, i, self) => self.indexOf(val) !== i;\r\n    const unique = (val, i, self) => self.indexOf(val) === i;\r\n\r\n    const setField = (y,x,v) => {\r\n        let newFields = fields.slice();\r\n        \r\n        if(newFields[y][x]!==undefined) {\r\n            newFields[y][x] = {\r\n                ...defaultObject,\r\n                ...{\r\n                    value: parseInt(v),\r\n                    error: false\r\n                }\r\n            }\r\n            \r\n            newFields = checkBoard(newFields);\r\n        }\r\n\r\n        setFields(newFields);\r\n\r\n        getSection(y, x);\r\n\r\n        let nextY = y;\r\n        let nextX = x + 1;\r\n        \r\n        if(nextX>=length) {\r\n            nextY = nextY + 1;\r\n            nextX = 0;\r\n        }\r\n\r\n        if(nextY>=length) {\r\n            nextY = 0;\r\n        }\r\n\r\n        setActive([nextY, nextX]);\r\n    }\r\n\r\n    const getRow = (y) => {\r\n        let resultSet = fields[y] || [];\r\n\r\n        return resultSet.map(field => field?.value ? parseInt(field.value) : null).filter(item => !!item);\r\n    }\r\n    \r\n    const getColumn = (x) => {\r\n        let resultSet = [];\r\n        \r\n        fields.slice().map((row) => resultSet.push(row[x] || null));\r\n        \r\n        return resultSet.map(field => field?.value ? parseInt(field.value) : null).filter(item => !!item);\r\n    }\r\n    \r\n    const getSection = (y,x) => {\r\n        const resultSet = [];\r\n        const section = Math.sqrt(length);\r\n\r\n        const startY = Math.floor(y / section) * section;\r\n        const startX = Math.floor(x / section) * section;\r\n\r\n        fields\r\n            .slice(startY, startY + section)\r\n            .map(row => resultSet.push(...row.slice(startX, startX + section)));\r\n\r\n        return resultSet.map(field => field?.value ? parseInt(field.value) : null).filter(item => !!item);\r\n    }\r\n\r\n    const checkBoard = (boardFields) => {\r\n        return boardFields\r\n            .map(row => \r\n                row.map(col => {\r\n                    return {\r\n                        ...defaultObject,\r\n                        ...{\r\n                            error: false,\r\n                            value: col?.value || null\r\n                        }\r\n                    }\r\n                })\r\n            )\r\n            .map((row, y) => \r\n                row.map((col, x) => {\r\n                    if(col.value) {\r\n                        col.error = !!(\r\n                            getRow(y).filter(duplicated).includes(col.value) ||\r\n                            getColumn(x).filter(duplicated).includes(col.value) ||\r\n                            getSection(y, x).filter(duplicated).includes(col.value)\r\n                        );\r\n                    }\r\n                    \r\n                    const values = [];\r\n\r\n                    values.push(...getRow(y));\r\n                    values.push(...getColumn(x));\r\n                    values.push(...getSection(y, x));\r\n                    \r\n                    const uniqueValues = values.filter(unique);\r\n                    col.possible = [...Array(length).keys()]\r\n                        .map(x => x + 1)\r\n                        .filter(x => !uniqueValues.includes(x));\r\n\r\n                    return col;\r\n                })\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className=\"sudoku-board\">\r\n            {fields.map((columns, key) => (\r\n                <Row \r\n                    columns={columns} \r\n                    row={key} \r\n                    boardLength={length}\r\n                    changeHandler={setField}\r\n                    activeRow={active[0]}\r\n                    activeColumn={active[1]}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import react from 'react';\r\n\r\nconst Toogle = ({onChange, text}) => {\r\n    return (\r\n        <div>\r\n            <span>{text}</span>\r\n            <label>\r\n                <input type=\"checkbox\" value=\"1\" onChange={onChange} />\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toogle;","import Board from './components/board';\nimport Toogle from './components/toggle';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"settings\">\n      <Toogle \n        text={'Dark theme'} \n        onChange={(e) => {\n          const element = document.body;\n\n          if(e.target.checked) {\n            element.classList.add('dark');\n          }else{\n            element.classList.remove('dark');\n          }\n        }}\n        />\n      <Toogle \n        text={'Show tips'} \n        onChange={(e) => {\n          const element = document.body;\n\n          if(e.target.checked) {\n            element.classList.add('show-tips');\n          }else{\n            element.classList.remove('show-tips');\n          }\n        }}\n      />\n      </div><Board length={9} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './global.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}