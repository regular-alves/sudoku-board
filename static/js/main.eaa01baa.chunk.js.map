{"version":3,"sources":["components/column/index.js","components/row/index.js","components/board/index.js","components/toggle/index.js","App.js","index.js"],"names":["Column","props","sectionLength","Math","sqrt","boardLength","lastOfSection","column","field","React","createRef","refs","className","this","floor","hasError","id","row","type","value","ref","onChange","e","changeHandler","target","substr","possible","length","map","i","for","Component","Row","columns","activeRow","activeColumn","columnErrors","changeFieldHandler","x","col","key","isActive","error","Board","defaultObject","useState","setRefs","active","setActive","fields","setFields","duplicated","val","self","indexOf","unique","setField","y","v","newFields","slice","undefined","parseInt","checkBoard","getSection","nextY","nextX","console","log","getRow","filter","item","getColumn","resultSet","push","section","startY","startX","addToRefs","pos","boardFields","includes","values","uniqueValues","Array","keys","Toogle","text","App","element","document","body","checked","classList","add","remove","ReactGA","initialize","set","page","pageview","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eaa01baa.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class Column extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sectionLength = Math.sqrt(this.props.boardLength);\r\n        this.lastOfSection = (this.props.column + 1) % this.sectionLength===0;\r\n        this.field = React.createRef();\r\n\r\n        this.props.refs(this.field);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div \r\n                className={\r\n                    `column column-${this.props.column} ` + \r\n                    `section-${Math.floor((this.props.column + this.sectionLength) / this.sectionLength)} ` +\r\n                    `${this.lastOfSection ? 'section-last' : ''} ` +\r\n                    `${this.props?.hasError ? 'error' : ''}` \r\n                }\r\n            >\r\n                <input \r\n                    id={`input-${this.props.row}-${this.props.column}`}\r\n                    type=\"number\" \r\n                    className=\"field\"\r\n                    value={this.props.value}\r\n                    ref={this.field}\r\n                    onChange={(e) => {\r\n                        this.props.changeHandler(this.props.column, e.target.value.substr(-1));\r\n                    }}\r\n                />\r\n                <div className=\"possibles\">{\r\n                    this.props?.possible.length>0 \r\n                    && this.props.possible.map(i => (\r\n                        <label \r\n                            for={`input-${this.props.row}-${this.props.column}`} \r\n                            className=\"possible\"\r\n                        >{i}</label>\r\n                    ))\r\n                }</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import './style.css';\r\nimport Column from '../column';\r\n\r\nconst Row = ({columns, row, changeHandler, boardLength, activeRow, activeColumn, columnErrors, refs}) => {\r\n    const sectionLength = Math.sqrt(boardLength);\r\n    const lastOfSection = (row + 1) % sectionLength===0;\r\n\r\n    const changeFieldHandler = (x, value) => {\r\n        changeHandler(row, x, value);\r\n    }\r\n\r\n    return (\r\n        <div className={`row row-${row} ${lastOfSection ? 'row-section-last' : ''}`}>\r\n            {columns.map((col, key) => (\r\n                <Column \r\n                    value={col?.value || ''} \r\n                    column={key} \r\n                    row={row}\r\n                    boardLength={boardLength}\r\n                    changeHandler={changeFieldHandler} \r\n                    isActive={activeRow===row && activeColumn===key}\r\n                    hasError={col?.error || false}\r\n                    possible={col?.possible || []}\r\n                    refs={refs}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Row from '../row';\r\n\r\nconst Board = ({length}) => {\r\n    const defaultObject = {\r\n        value: null, \r\n        error: true,\r\n        possible: []\r\n    };\r\n\r\n    /* const [fields, setFields] = useState(Array(9).fill(Array(9).fill(defaultObject))); */\r\n    const section = Math.sqrt(length);\r\n    const [refs, setRefs] = useState({});\r\n    const [active, setActive] = useState([0,0]);\r\n    const [fields, setFields] = useState([\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n        [null,null,null,null,null,null,null,null,null],\r\n    ]);\r\n\r\n    const duplicated = (val, i, self) => self.indexOf(val) !== i;\r\n    const unique = (val, i, self) => self.indexOf(val) === i;\r\n\r\n    const setField = (y,x,v) => {\r\n        let newFields = fields.slice();\r\n        \r\n        if(newFields[y][x]!==undefined) {\r\n            newFields[y][x] = {\r\n                ...defaultObject,\r\n                ...{\r\n                    value: parseInt(v),\r\n                    error: false\r\n                }\r\n            }\r\n            \r\n            newFields = checkBoard(newFields);\r\n        }\r\n\r\n        setFields(newFields);\r\n\r\n        getSection(y, x);\r\n\r\n        let nextY = y;\r\n        let nextX = x + 1;\r\n        \r\n        if(nextX>=length) {\r\n            nextY = nextY + 1;\r\n            nextX = 0;\r\n        }\r\n\r\n        if(nextY>=length) {\r\n            nextY = 0;\r\n        }\r\n\r\n        setActive([nextY, nextX]);\r\n\r\n        console.log({ refs });\r\n    }\r\n\r\n    const getRow = (y) => {\r\n        let resultSet = fields[y] || [];\r\n\r\n        return resultSet.map(field => field?.value ? parseInt(field.value) : null).filter(item => !!item);\r\n    }\r\n    \r\n    const getColumn = (x) => {\r\n        let resultSet = [];\r\n        \r\n        fields.slice().map((row) => resultSet.push(row[x] || null));\r\n        \r\n        return resultSet.map(field => field?.value ? parseInt(field.value) : null).filter(item => !!item);\r\n    }\r\n    \r\n    const getSection = (y,x) => {\r\n        const resultSet = [];\r\n        const section = Math.sqrt(length);\r\n\r\n        const startY = Math.floor(y / section) * section;\r\n        const startX = Math.floor(x / section) * section;\r\n\r\n        fields\r\n            .slice(startY, startY + section)\r\n            .map(row => resultSet.push(...row.slice(startX, startX + section)));\r\n\r\n        return resultSet.map(field => field?.value ? parseInt(field.value) : null).filter(item => !!item);\r\n    }\r\n\r\n    const addToRefs = (pos, ref) => setRefs({ ...refs, [pos]: ref });\r\n    const checkBoard = (boardFields) => {\r\n        return boardFields\r\n            .map(row => \r\n                row.map(col => {\r\n                    return {\r\n                        ...defaultObject,\r\n                        ...{\r\n                            error: false,\r\n                            value: col?.value || null\r\n                        }\r\n                    }\r\n                })\r\n            )\r\n            .map((row, y) => \r\n                row.map((col, x) => {\r\n                    if(col.value) {\r\n                        col.error = !!(\r\n                            getRow(y).filter(duplicated).includes(col.value) ||\r\n                            getColumn(x).filter(duplicated).includes(col.value) ||\r\n                            getSection(y, x).filter(duplicated).includes(col.value)\r\n                        );\r\n                    }\r\n                    \r\n                    const values = [];\r\n\r\n                    values.push(...getRow(y));\r\n                    values.push(...getColumn(x));\r\n                    values.push(...getSection(y, x));\r\n                    \r\n                    const uniqueValues = values.filter(unique);\r\n                    col.possible = [...Array(length).keys()]\r\n                        .map(x => x + 1)\r\n                        .filter(x => !uniqueValues.includes(x));\r\n\r\n                    return col;\r\n                })\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className=\"sudoku-board\">\r\n            {fields.map((columns, key) => (\r\n                <Row \r\n                    columns={columns} \r\n                    row={key} \r\n                    boardLength={length}\r\n                    changeHandler={setField}\r\n                    activeRow={active[0]}\r\n                    activeColumn={active[1]}\r\n                    refs={addToRefs}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import react from 'react';\r\nimport './style.css';\r\n\r\nconst Toogle = ({onChange, text}) => {\r\n    return (\r\n        <div className=\"toogle-button\">\r\n            <span>{text}</span>\r\n            <label>\r\n                <input type=\"checkbox\" value=\"1\" onChange={onChange} />\r\n                <span>&nbsp;</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toogle;","import Board from './components/board';\nimport Toogle from './components/toggle';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"settings\">\n      <Toogle \n        text={'Dark theme'} \n        onChange={(e) => {\n          const element = document.body;\n\n          if(e.target.checked) {\n            element.classList.add('dark');\n          }else{\n            element.classList.remove('dark');\n          }\n        }}\n        />\n      <Toogle \n        text={'Show tips'} \n        onChange={(e) => {\n          const element = document.body;\n\n          if(e.target.checked) {\n            element.classList.add('show-tips');\n          }else{\n            element.classList.remove('show-tips');\n          }\n        }}\n      />\n      </div><Board length={9} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './global.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('UA-216506531-1');\r\nReactGA.set({ page: '/' });\r\nReactGA.pageview('/');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}