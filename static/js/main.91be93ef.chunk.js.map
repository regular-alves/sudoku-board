{"version":3,"sources":["components/Toogle/index.js","components/Timer/index.js","components/Column/index.js","components/Row/index.js","components/Board/index.js","App.js","index.js"],"names":["Toogle","onChange","text","checked","className","type","value","Timer","started","state","setState","useState","isNaN","parseInt","took","setTook","startDate","setStartDate","time","Date","setTime","getTime","setInterval","toISOString","substr","Column","props","sectionLength","Math","sqrt","boardLength","lastOfSection","column","this","floor","error","id","row","e","changeHandler","target","possible","length","map","i","htmlFor","React","Component","Row","columns","changeFieldHandler","x","col","key","Board","storageFields","JSON","parse","localStorage","getItem","defaultObject","Array","from","keys","darkTheme","setDarkTheme","tips","setTips","setStarted","field","stringify","fill","fields","setFields","duplicated","val","self","indexOf","unique","useEffect","setItem","setField","y","v","newFields","slice","undefined","checkBoard","getRow","filter","item","getColumn","resultSet","push","getSection","section","startY","startX","boardFields","includes","values","uniqueValues","console","log","App","ReactGA","initialize","set","page","pageview","exception","description","fatal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91be93ef.chunk.js","sourcesContent":["import './style.css';\r\n\r\nconst Toogle = ({onChange, text, checked = false}) => {\r\n    return (\r\n        <div className=\"toogle-button\">\r\n            <span>{text}</span>\r\n            <label>\r\n                <input type=\"checkbox\" value=\"1\" onChange={onChange} checked={!!checked}/>\r\n                <span>&nbsp;</span>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Toogle;","import {useState} from 'react';\r\n\r\nimport './style.css';\r\n\r\nconst Timer = ({ started, state = 0, setState }) => {\r\n    const [took, setTook] = useState(state===null || isNaN(state) ? 0 : parseInt(state));\r\n    const [startDate, setStartDate] = useState(0);\r\n\r\n    if(started && !startDate) {\r\n        const time = new Date();\r\n\r\n        time.setTime(time.getTime() + (-1 * took));\r\n\r\n        setStartDate(new Date(time));\r\n    }\r\n\r\n    if(started && startDate) {\r\n        setInterval(\r\n            () => {\r\n                setTook(new Date().getTime() - startDate.getTime());\r\n                setState(new Date().getTime() - startDate.getTime());\r\n            },\r\n            1000\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            {new Date(took).toISOString().substr(11, 8)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Timer;","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class Column extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.sectionLength = Math.sqrt(this.props.boardLength);\r\n        this.lastOfSection = (this.props.column + 1) % this.sectionLength===0;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className={\r\n                    `column column-${this.props.column} ` + \r\n                    `section-${Math.floor((this.props.column + this.sectionLength) / this.sectionLength)} ` +\r\n                    `${this.lastOfSection ? 'section-last' : ''} ` +\r\n                    `${this.props.error ? 'error' : ''}` \r\n                }\r\n            >\r\n                <input \r\n                    id={`input-${this.props.row}-${this.props.column}`}\r\n                    type=\"number\" \r\n                    className=\"field\"\r\n                    value={this.props.value}\r\n                    onChange={(e) => {\r\n                        this.props.changeHandler(this.props.column, e.target.value.substr(-1));\r\n                    }}\r\n                />\r\n                <div className=\"possibles\">{\r\n                    this.props?.possible.length>0 \r\n                    && this.props.possible.map(i => (\r\n                        <label \r\n                            htmlFor={`input-${this.props.row}-${this.props.column}`} \r\n                            className=\"possible\"\r\n                        >{i}</label>\r\n                    ))\r\n                }</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import './style.css';\r\nimport Column from '../Column';\r\n\r\nconst Row = ({ columns, row, changeHandler, boardLength }) => {\r\n    const sectionLength = Math.sqrt(boardLength);\r\n    const lastOfSection = (row + 1) % sectionLength===0;\r\n\r\n    const changeFieldHandler = (x, value) => {\r\n        changeHandler(row, x, value);\r\n    }\r\n\r\n    return (\r\n        <div className={`row row-${row} ${lastOfSection ? 'row-section-last' : ''}`}>\r\n            {columns.map((col, key) => (\r\n                <Column \r\n                    {...col}\r\n                    column={key} \r\n                    row={row}\r\n                    boardLength={boardLength}\r\n                    changeHandler={changeFieldHandler}\r\n                    possible={col?.possible || []}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;","import React, { useState, useEffect } from 'react';\r\nimport Toogle from '../Toogle';\r\nimport Timer from '../Timer';\r\nimport Row from '../Row';\r\n\r\nimport './style.css';\r\n\r\nconst Board = ({ length }) => {\r\n    const storageFields = JSON.parse(localStorage.getItem('sudoku-board-fields'));\r\n    const defaultObject = {\r\n        value: null, \r\n        error: false,\r\n        possible: Array.from(Array(length).keys())\r\n    };\r\n\r\n    const [darkTheme, setDarkTheme] = useState(localStorage.getItem('sudoku-board-dark-theme')==='1');\r\n    const [tips, setTips] = useState(localStorage.getItem('sudoku-board-show-tips')==='1');\r\n    const [started, setStarted] = useState(false);\r\n    const [fields, setFields] = useState(\r\n        storageFields && storageFields.length>0\r\n        ? storageFields.map(row => row.map(col => {\r\n            let field = JSON.parse(JSON.stringify(defaultObject)); \r\n            return {\r\n                ...field,\r\n                value: col\r\n            };\r\n        }))\r\n        : JSON.parse(JSON.stringify(Array(9).fill(Array(9).fill(defaultObject))))\r\n    );\r\n  \r\n    const duplicated = (val, i, self) => self.indexOf(val) !== i;\r\n    const unique = (val, i, self) => self.indexOf(val) === i;\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\r\n            'sudoku-board-fields', \r\n            JSON.stringify(fields.map(row => row.map(col => col?.value ?? null)))\r\n        );\r\n    }, [fields]);\r\n\r\n    const setField = (y,x,v) => {\r\n        if(!started && !!v) {\r\n            setStarted(true);\r\n        }\r\n\r\n        let newFields = fields.slice();\r\n        \r\n        if(newFields[y][x]!==undefined) {\r\n            newFields[y][x].value = parseInt(v);\r\n            \r\n            newFields = checkBoard(newFields);\r\n        }\r\n\r\n        setFields(newFields);\r\n    }\r\n\r\n    const getRow = (y) => {\r\n        let resultSet = fields[y] || [];\r\n\r\n        return resultSet.filter(item => !!item.value).map(field => parseInt(field.value));\r\n    }\r\n    \r\n    const getColumn = (x) => {\r\n        let resultSet = [];\r\n        \r\n        fields.slice().map((row) => resultSet.push(row[x] || null));\r\n        \r\n        return resultSet.filter(item => !!item.value).map(field => parseInt(field.value));\r\n    }\r\n    \r\n    const getSection = (y,x) => {\r\n        const resultSet = [];\r\n        const section = Math.sqrt(length);\r\n\r\n        const startY = Math.floor(y / section) * section;\r\n        const startX = Math.floor(x / section) * section;\r\n\r\n        fields\r\n            .slice(startY, startY + section)\r\n            .map(row => resultSet.push(...row.slice(startX, startX + section)));\r\n\r\n        return resultSet.filter(item => !!item.value).map(field => parseInt(field.value));\r\n    }\r\n    \r\n    const checkBoard = (boardFields) => {\r\n        return boardFields\r\n            .map((row, y) => \r\n                row.map((col, x) => {\r\n                    if(col.value) {\r\n                        col.error = !!(\r\n                            getRow(y).filter(duplicated).includes(col.value) ||\r\n                            getColumn(x).filter(duplicated).includes(col.value) ||\r\n                            getSection(y, x).filter(duplicated).includes(col.value)\r\n                        );\r\n                    }else{\r\n                        col.error = false;\r\n                    }\r\n                    \r\n                    const values = [];\r\n\r\n                    values.push(...getRow(y));\r\n                    values.push(...getColumn(x));\r\n                    values.push(...getSection(y, x));\r\n                    \r\n                    const uniqueValues = values.filter(unique);\r\n                    col.possible = [...Array(length).keys()]\r\n                        .map(x => x + 1)\r\n                        .filter(x => !uniqueValues.includes(x));\r\n\r\n                    return col;\r\n                })\r\n            );\r\n    }\r\n\r\n    checkBoard(fields);\r\n\r\n    return (\r\n        <div className={`wrapper ${darkTheme ? 'dark' : ''} ${tips ? 'show-tips' : ''}`}>\r\n            <div className=\"sudoku-board\">\r\n                {fields.map((columns, key) => (\r\n                    <Row \r\n                        columns={columns} \r\n                        row={key} \r\n                        boardLength={length}\r\n                        changeHandler={setField}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className=\"side-bar\">\r\n                <div className=\"settings\">\r\n                    <Toogle \r\n                        text={'Dark theme'} \r\n                        checked={darkTheme}\r\n                        onChange={(e) => {\r\n                            console.log(!e.target.checked);\r\n\r\n                            localStorage.setItem(\r\n                                'sudoku-board-dark-theme', \r\n                                e.target.checked ? 1 : 0\r\n                            );\r\n\r\n                            setDarkTheme(e.target.checked ? 1 : 0);\r\n                        }}\r\n                    />\r\n                    <Toogle \r\n                        text={'Show tips'} \r\n                        checked={tips}\r\n                        onChange={(e) => {\r\n                            localStorage.setItem(\r\n                                'sudoku-board-show-tips', \r\n                                e.target.checked ? 1 : 0\r\n                            );\r\n\r\n                            setTips(e.target.checked ? 1 : 0);\r\n                        }}\r\n                    />\r\n                </div>\r\n                <Timer \r\n                    started={started} \r\n                    state={localStorage.getItem('sudoku-board-time')} \r\n                    setState={(took) => {\r\n                        localStorage.setItem('sudoku-board-time', took);\r\n                    }}\r\n                />\r\n                <ul className=\"history\"></ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import Board from './components/Board';\n\nfunction App() {\n  return (<Board length={9} />);\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './global.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('UA-216506531-1');\r\n\r\nReactGA.set({ page: '/' });\r\nReactGA.pageview('/');\r\n\r\nReactGA.exception({\r\n  description: 'An error ocurred',\r\n  fatal: true\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}